#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    Node(int data){
        this -> data = data;
        this -> next = NULL;
    }
};

void print(Node* &head){
    Node* temp = head;
    while(temp != NULL){
        cout<<temp->data<<" ";
        temp = temp -> next;
    }
    cout<<endl;
}

void insertAtHead(Node* &head, int d){
    Node* temp = new Node(d);
    temp -> next = head;
    head = temp ; 
}

void insertAtTail(Node* &tail, int d){
    Node* temp = new Node(d);
    tail -> next = temp;
    tail = temp;
}

void  insertAtMiddle(Node* &head, Node* &tail, int d, int position){
    if(position == 1){
        insertAtHead(head,d);
        return;
    }
    Node* temp = head;
    int count = 1;
    while(count < position -1){
        temp = temp -> next;
        count++;
    }
    if(temp->next == NULL){
        insertAtTail(tail,d);
        return;
    }
    Node* nodeToInsert = new Node(d);
    nodeToInsert -> next = temp -> next;
    temp->next = nodeToInsert;
}

void deleteNode(int position, Node* &head){
    
    //Deleting first Node
    if(position==1){
        Node* temp = head;
        head = head->next;
        temp->next=NULL;
        delete temp;
    }
    else{
        //Deleting middle or last node
        Node* curr = head;
        Node* prev = NULL;
        int count = 1;
        while(count < position){
            prev = curr;
            curr = curr-> next;
            count++;
        }
        prev->next = curr->next;
        curr->next = NULL;
        delete curr;
    }
}

int main(){
    Node* node1 = new Node(10);
    Node* head = node1;
    Node* tail = node1;
    print(head);

    insertAtTail(tail,11);
    print(head);

    insertAtTail(tail,12);
    print(head);

    insertAtTail(tail,14);
    print(head);

    insertAtMiddle(head,tail,13,4);
    print(head);

    insertAtHead(head,9);
    print(head);

    deleteNode(2,head);
    print(head);
    return 0;
}
