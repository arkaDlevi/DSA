#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* prev;
    Node* next;

    Node(int d){
        this->data=d;
        this->prev=NULL;
        this->next=NULL;
    }
};

void print(Node* head){
    Node* temp = head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int getLength(Node* head){
    int len=0;
    Node* temp = head;
    while(temp!=NULL){
        len++;
        temp=temp->next;
    }
    return len;
}

void insertAtHead(Node* &head, int d){
    Node* temp = new Node(d);
    temp->next = head;
    head->prev = temp;
    head=temp;
}

void insertAtTail(Node* &tail, int d){
    Node* temp = new Node(d);
    temp->prev = tail;
    tail->next = temp;
    tail=temp;
}

void insertAtPos(Node* &head, int position,int d){
    Node* nodeToInsert = new Node(d);
    if(position==1){
        insertAtHead(head,d);
        return;
    }
    Node *temp = head;
    int count = 1;

    while(count<position -1){
        temp = temp->next;
        count++;
    }
    if(temp->next == NULL){
        insertAtTail(head,d);
        return;
    }
        nodeToInsert -> next = temp -> next;
        temp->next->prev = nodeToInsert;
        temp->next = nodeToInsert;
    }

void deleteNode(int position,Node* &head){
    //Deleting first node
    if(position == 1){
        Node* temp = head;
        temp->next->prev = NULL;
        head = temp -> next;
        temp->next = NULL;
        delete temp;
    }
    else{
        //Deleting last node or any node 
        Node* curr = head;
        Node* prev = NULL;
        int count = 1;
        while(count < position){
            prev = curr;
            curr=curr->next;
            count++;
        }
        curr->prev = NULL;
        prev -> next = curr->next;
        curr->next = NULL;
        delete curr;
    }
}

int main(){
    Node* node1 = new Node(10);
    Node* head = node1;
    Node* tail = node1;
    print(head);

    insertAtTail(tail,11);
    print(head);

    insertAtTail(tail,13);
    print(head);

    insertAtPos(head,3,12);
    print(head);

    insertAtHead(head,9);
    print(head);

    deleteNode(2,head);
    print(head);
}
